&reference.reflection.reflectionclass.construct;
&reference.reflection.reflectionclass.export;
&reference.reflection.reflectionclass.getconstant;
&reference.reflection.reflectionclass.getconstants;
&reference.reflection.reflectionclass.getconstructor;
&reference.reflection.reflectionclass.getdefaultproperties;
&reference.reflection.reflectionclass.getdoccomment;
&reference.reflection.reflectionclass.getendline;
&reference.reflection.reflectionclass.getextension;
&reference.reflection.reflectionclass.getextensionname;
&reference.reflection.reflectionclass.getfilename;
&reference.reflection.reflectionclass.getinterfacenames;
&reference.reflection.reflectionclass.getinterfaces;
&reference.reflection.reflectionclass.getmethod;
&reference.reflection.reflectionclass.getmethods;
&reference.reflection.reflectionclass.getmodifiers;
&reference.reflection.reflectionclass.getname;
&reference.reflection.reflectionclass.getnamespacename;
&reference.reflection.reflectionclass.getparentclass;
&reference.reflection.reflectionclass.getproperties;
&reference.reflection.reflectionclass.getproperty;
&reference.reflection.reflectionclass.getshortname;
&reference.reflection.reflectionclass.getstartline;
&reference.reflection.reflectionclass.getstaticproperties;
&reference.reflection.reflectionclass.getstaticpropertyvalue;
&reference.reflection.reflectionclass.gettraitaliases;
&reference.reflection.reflectionclass.gettraitnames;
&reference.reflection.reflectionclass.gettraits;
&reference.reflection.reflectionclass.hasconstant;
&reference.reflection.reflectionclass.hasmethod;
&reference.reflection.reflectionclass.hasproperty;
&reference.reflection.reflectionclass.implementsinterface;
&reference.reflection.reflectionclass.innamespace;
&reference.reflection.reflectionclass.isabstract;
&reference.reflection.reflectionclass.iscloneable;
&reference.reflection.reflectionclass.isfinal;
&reference.reflection.reflectionclass.isinstance;
&reference.reflection.reflectionclass.isinstantiable;
&reference.reflection.reflectionclass.isinterface;
&reference.reflection.reflectionclass.isinternal;
&reference.reflection.reflectionclass.isiterateable;
&reference.reflection.reflectionclass.issubclassof;
&reference.reflection.reflectionclass.istrait;
&reference.reflection.reflectionclass.isuserdefined;
&reference.reflection.reflectionclass.newinstance;
&reference.reflection.reflectionclass.newinstanceargs;
&reference.reflection.reflectionclass.newinstancewithoutconstructor;
&reference.reflection.reflectionclass.setstaticpropertyvalue;
&reference.reflection.reflectionclass.tostring;
