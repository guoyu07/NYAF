&reference.reflection.reflectionfunctionabstract.clone;
&reference.reflection.reflectionfunctionabstract.getclosurescopeclass;
&reference.reflection.reflectionfunctionabstract.getclosurethis;
&reference.reflection.reflectionfunctionabstract.getdoccomment;
&reference.reflection.reflectionfunctionabstract.getendline;
&reference.reflection.reflectionfunctionabstract.getextension;
&reference.reflection.reflectionfunctionabstract.getextensionname;
&reference.reflection.reflectionfunctionabstract.getfilename;
&reference.reflection.reflectionfunctionabstract.getname;
&reference.reflection.reflectionfunctionabstract.getnamespacename;
&reference.reflection.reflectionfunctionabstract.getnumberofparameters;
&reference.reflection.reflectionfunctionabstract.getnumberofrequiredparameters;
&reference.reflection.reflectionfunctionabstract.getparameters;
&reference.reflection.reflectionfunctionabstract.getreturntype;
&reference.reflection.reflectionfunctionabstract.getshortname;
&reference.reflection.reflectionfunctionabstract.getstartline;
&reference.reflection.reflectionfunctionabstract.getstaticvariables;
&reference.reflection.reflectionfunctionabstract.hasreturntype;
&reference.reflection.reflectionfunctionabstract.innamespace;
&reference.reflection.reflectionfunctionabstract.isclosure;
&reference.reflection.reflectionfunctionabstract.isdeprecated;
&reference.reflection.reflectionfunctionabstract.isgenerator;
&reference.reflection.reflectionfunctionabstract.isinternal;
&reference.reflection.reflectionfunctionabstract.isuserdefined;
&reference.reflection.reflectionfunctionabstract.isvariadic;
&reference.reflection.reflectionfunctionabstract.returnsreference;
&reference.reflection.reflectionfunctionabstract.tostring;
